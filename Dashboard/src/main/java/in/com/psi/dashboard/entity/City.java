package in.com.psi.dashboard.entity;

// Generated 6 Feb, 2016 10:56:52 AM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * City generated by hbm2java
 */
@Entity
@Table(name = "city", catalog = "dashboard")
public class City implements java.io.Serializable {

	private Integer id;
	private State state;
	private String name;
	private Set<Employee> employeesForPermanentCityId = new HashSet<Employee>(0);
	private Set<Employee> employeesForPresentCityId = new HashSet<Employee>(0);

	public City() {
	}

	public City(State state, String name) {
		this.state = state;
		this.name = name;
	}

	public City(State state, String name,
			Set<Employee> employeesForPermanentCityId,
			Set<Employee> employeesForPresentCityId) {
		this.state = state;
		this.name = name;
		this.employeesForPermanentCityId = employeesForPermanentCityId;
		this.employeesForPresentCityId = employeesForPresentCityId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "state_id", nullable = false)
	public State getState() {
		return this.state;
	}

	public void setState(State state) {
		this.state = state;
	}

	@Column(name = "name", nullable = false, length = 30)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cityByPermanentCityId")
	public Set<Employee> getEmployeesForPermanentCityId() {
		return this.employeesForPermanentCityId;
	}

	public void setEmployeesForPermanentCityId(
			Set<Employee> employeesForPermanentCityId) {
		this.employeesForPermanentCityId = employeesForPermanentCityId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cityByPresentCityId")
	public Set<Employee> getEmployeesForPresentCityId() {
		return this.employeesForPresentCityId;
	}

	public void setEmployeesForPresentCityId(
			Set<Employee> employeesForPresentCityId) {
		this.employeesForPresentCityId = employeesForPresentCityId;
	}

}
