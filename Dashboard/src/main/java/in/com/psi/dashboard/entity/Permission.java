package in.com.psi.dashboard.entity;

// Generated 6 Feb, 2016 10:56:52 AM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Permission generated by hbm2java
 */
@Entity
@Table(name = "permission", catalog = "dashboard")
public class Permission implements java.io.Serializable {

	private Integer id;
	private String permission;
	private Set<EmployeePermission> employeePermissions = new HashSet<EmployeePermission>(
			0);
	private Set<RolePermission> rolePermissions = new HashSet<RolePermission>(0);

	public Permission() {
	}

	public Permission(String permission,
			Set<EmployeePermission> employeePermissions,
			Set<RolePermission> rolePermissions) {
		this.permission = permission;
		this.employeePermissions = employeePermissions;
		this.rolePermissions = rolePermissions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "permission")
	public String getPermission() {
		return this.permission;
	}

	public void setPermission(String permission) {
		this.permission = permission;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "permission")
	public Set<EmployeePermission> getEmployeePermissions() {
		return this.employeePermissions;
	}

	public void setEmployeePermissions(
			Set<EmployeePermission> employeePermissions) {
		this.employeePermissions = employeePermissions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "permission")
	public Set<RolePermission> getRolePermissions() {
		return this.rolePermissions;
	}

	public void setRolePermissions(Set<RolePermission> rolePermissions) {
		this.rolePermissions = rolePermissions;
	}

}
