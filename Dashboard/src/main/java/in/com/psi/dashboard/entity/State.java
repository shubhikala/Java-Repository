package in.com.psi.dashboard.entity;

// Generated 6 Feb, 2016 10:56:52 AM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * State generated by hbm2java
 */
@Entity
@Table(name = "state", catalog = "dashboard")
public class State implements java.io.Serializable {

	private Integer id;
	private Country country;
	private String name;
	private Set<Employee> employeesForPresentStateId = new HashSet<Employee>(0);
	private Set<Employee> employeesForPermanentStateId = new HashSet<Employee>(
			0);
	private Set<City> cities = new HashSet<City>(0);

	public State() {
	}

	public State(Country country, String name) {
		this.country = country;
		this.name = name;
	}

	public State(Country country, String name,
			Set<Employee> employeesForPresentStateId,
			Set<Employee> employeesForPermanentStateId, Set<City> cities) {
		this.country = country;
		this.name = name;
		this.employeesForPresentStateId = employeesForPresentStateId;
		this.employeesForPermanentStateId = employeesForPermanentStateId;
		this.cities = cities;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "country_id", nullable = false)
	public Country getCountry() {
		return this.country;
	}

	public void setCountry(Country country) {
		this.country = country;
	}

	@Column(name = "name", nullable = false, length = 30)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "stateByPresentStateId")
	public Set<Employee> getEmployeesForPresentStateId() {
		return this.employeesForPresentStateId;
	}

	public void setEmployeesForPresentStateId(
			Set<Employee> employeesForPresentStateId) {
		this.employeesForPresentStateId = employeesForPresentStateId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "stateByPermanentStateId")
	public Set<Employee> getEmployeesForPermanentStateId() {
		return this.employeesForPermanentStateId;
	}

	public void setEmployeesForPermanentStateId(
			Set<Employee> employeesForPermanentStateId) {
		this.employeesForPermanentStateId = employeesForPermanentStateId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "state")
	public Set<City> getCities() {
		return this.cities;
	}

	public void setCities(Set<City> cities) {
		this.cities = cities;
	}

}
